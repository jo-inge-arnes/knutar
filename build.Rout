
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #!/usr/bin/env Rscript
> 
> library(devtools)
Loading required package: usethis
> library(roxygen2)
> 
> document()
ℹ Updating cladina documentation
ℹ Loading cladina
Error in `load_all()`:
! Failed to load 'R/suggest_splines.R'
Caused by error in `parse()`:
! /mnt/c/Projects/cladina/R/suggest_splines.R:77:3: unexpected '}'
76:       Boundary.knots = boundary_knots)
77:   }
      ^
Backtrace:
     ▆
  1. ├─devtools::document()
  2. │ └─roxygen2::roxygenise(pkg$path, roclets)
  3. │   └─roxygen2 (local) load_code(base_path)
  4. │     └─pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
  5. │       └─pkgload::load_code(path, quiet = quiet)
  6. │         ├─withr (local) withr_with_dir(path, source_many(paths, encoding, env))
  7. │         │ └─base::force(code)
  8. │         └─pkgload:::source_many(paths, encoding, env)
  9. │           ├─rlang::try_fetch(...)
 10. │           │ ├─base::tryCatch(...)
 11. │           │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 12. │           │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 13. │           │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 14. │           │ └─base::withCallingHandlers(...)
 15. │           └─pkgload:::source_one(file, encoding, envir = envir)
 16. │             └─base::parse(text = lines, n = -1, srcfile = srcfile)
 17. └─base::.handleSimpleError(...)
 18.   └─rlang (local) h(simpleError(msg, call))
 19.     └─handlers[[1L]](cnd)
 20.       └─cli::cli_abort(msg, parent = cnd, call = quote(load_all()))
 21.         └─rlang::abort(...)
Execution halted
